Terminals unused in grammar

   ','
   '"'
   RETURN
   VOID


State 108 conflicts: 13 shift/reduce
State 133 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 DeclarationStmt: VAR IDENTIFIER TypeName
    3                | VAR IDENTIFIER TypeName '=' Expression
    4                | VAR IDENTIFIER ArrayType
    5                | VAR IDENTIFIER ArrayType '=' Expression

    6 Type: TypeName
    7     | ArrayType

    8 TypeName: INT
    9         | FLOAT
   10         | BOOL
   11         | STRING

   12 ArrayType: '[' Expression ']' Type

   13 Expression: UnaryExpr
   14           | Expression binary_op Expression

   15 UnaryExpr: PrimaryExpr
   16          | unary_op UnaryExpr

   17 IncDecStmt: Expression INC
   18           | Expression DEC

   19 binary_op: LAND
   20          | LOR
   21          | cmp_op
   22          | add_op
   23          | mul_op

   24 cmp_op: EQL
   25       | NEQ
   26       | '<'
   27       | LEQ
   28       | '>'
   29       | GEQ

   30 add_op: '+'
   31       | '-'

   32 mul_op: '*'
   33       | '/'
   34       | '%'

   35 unary_op: '+'
   36         | '-'
   37         | '!'

   38 PrimaryExpr: Operand
   39            | IndexExpr
   40            | ConversionExpr

   41 Operand: Literal
   42        | IDENTIFIER
   43        | Boolean
   44        | '(' Expression ')'

   45 Boolean: TRUE
   46        | FALSE

   47 Literal: INT_LIT
   48        | FLOAT_LIT
   49        | STRING_LIT

   50 IndexExpr: PrimaryExpr '[' Expression ']'

   51 ConversionExpr: Type '(' Expression ')'

   52 Statement: DeclarationStmt NEWLINE
   53          | SimpleStmt NEWLINE
   54          | Block NEWLINE
   55          | IfStmt NEWLINE
   56          | ForStmt NEWLINE
   57          | PrintStmt NEWLINE
   58          | NEWLINE

   59 SimpleStmt: AssignmentStmt
   60           | Expression
   61           | IncDecStmt

   62 AssignmentStmt: Expression assign_op Expression

   63 assign_op: '='
   64          | ADD_ASSIGN
   65          | SUB_ASSIGN
   66          | MUL_ASSIGN
   67          | QUO_ASSIGN
   68          | REM_ASSIGN

   69 $@1: %empty

   70 Block: '{' $@1 StatementList '}'

   71 StatementList: Statement
   72              | StatementList Statement

   73 IfStmt: IF Condition Block
   74       | IF Condition Block Else_stmt
   75       | IF Condition Block ElseIfList
   76       | IF Condition Block ElseIfList Else_stmt

   77 ElseIfList: ELSE IF Condition Block
   78           | ELSE IF Condition Block ElseIfList

   79 Else_stmt: ELSE Block

   80 Condition: Expression

   81 ForStmt: FOR Condition Block
   82        | FOR ForClause Block

   83 ForClause: InitStmt ';' Condition ';' PostStmt

   84 InitStmt: SimpleStmt

   85 PostStmt: SimpleStmt

   86 PrintStmt: PRINT '(' Expression ')'
   87          | PRINTLN '(' Expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 37
'"' (34)
'%' (37) 34
'(' (40) 44 51 86 87
')' (41) 44 51 86 87
'*' (42) 32
'+' (43) 30 35
',' (44)
'-' (45) 31 36
'/' (47) 33
';' (59) 83
'<' (60) 26
'=' (61) 3 5 63
'>' (62) 28
'[' (91) 12 50
']' (93) 12 50
'{' (123) 70
'}' (125) 70
error (256)
PRINT (258) 86
PRINTLN (259) 87
IF (260) 73 74 75 76 77 78
ELSE (261) 77 78 79
FOR (262) 81 82
ADD_ASSIGN (263) 64
SUB_ASSIGN (264) 65
MUL_ASSIGN (265) 66
QUO_ASSIGN (266) 67
REM_ASSIGN (267) 68
TRUE (268) 45
FALSE (269) 46
RETURN (270)
VOID (271)
INT (272) 8
FLOAT (273) 9
STRING (274) 11
BOOL (275) 10
VAR (276) 2 3 4 5
NEWLINE (277) 52 53 54 55 56 57 58
LOR (278) 20
LAND (279) 19
GEQ (280) 29
LEQ (281) 27
EQL (282) 24
NEQ (283) 25
INC (284) 17
DEC (285) 18
IDENTIFIER (286) 2 3 4 5 42
STRING_LIT (287) 49
INT_LIT (288) 47
FLOAT_LIT (289) 48


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program (54)
    on left: 1, on right: 0
DeclarationStmt (55)
    on left: 2 3 4 5, on right: 52
Type (56)
    on left: 6 7, on right: 12 51
TypeName (57)
    on left: 8 9 10 11, on right: 2 3 6
ArrayType (58)
    on left: 12, on right: 4 5 7
Expression (59)
    on left: 13 14, on right: 3 5 12 14 17 18 44 50 51 60 62 80 86
    87
UnaryExpr (60)
    on left: 15 16, on right: 13 16
IncDecStmt (61)
    on left: 17 18, on right: 61
binary_op (62)
    on left: 19 20 21 22 23, on right: 14
cmp_op (63)
    on left: 24 25 26 27 28 29, on right: 21
add_op (64)
    on left: 30 31, on right: 22
mul_op (65)
    on left: 32 33 34, on right: 23
unary_op (66)
    on left: 35 36 37, on right: 16
PrimaryExpr (67)
    on left: 38 39 40, on right: 15 50
Operand (68)
    on left: 41 42 43 44, on right: 38
Boolean (69)
    on left: 45 46, on right: 43
Literal (70)
    on left: 47 48 49, on right: 41
IndexExpr (71)
    on left: 50, on right: 39
ConversionExpr (72)
    on left: 51, on right: 40
Statement (73)
    on left: 52 53 54 55 56 57 58, on right: 71 72
SimpleStmt (74)
    on left: 59 60 61, on right: 53 84 85
AssignmentStmt (75)
    on left: 62, on right: 59
assign_op (76)
    on left: 63 64 65 66 67 68, on right: 62
Block (77)
    on left: 70, on right: 54 73 74 75 76 77 78 79 81 82
$@1 (78)
    on left: 69, on right: 70
StatementList (79)
    on left: 71 72, on right: 1 70 72
IfStmt (80)
    on left: 73 74 75 76, on right: 55
ElseIfList (81)
    on left: 77 78, on right: 75 76 78
Else_stmt (82)
    on left: 79, on right: 74 76
Condition (83)
    on left: 80, on right: 73 74 75 76 77 78 81 83
ForStmt (84)
    on left: 81 82, on right: 56
ForClause (85)
    on left: 83, on right: 82
InitStmt (86)
    on left: 84, on right: 83
PostStmt (87)
    on left: 85, on right: 83
PrintStmt (88)
    on left: 86 87, on right: 57


State 0

    0 $accept: . Program $end

    PRINT       shift, and go to state 1
    PRINTLN     shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    '('         shift, and go to state 5
    '{'         shift, and go to state 6
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    VAR         shift, and go to state 14
    NEWLINE     shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Program          go to state 23
    DeclarationStmt  go to state 24
    Type             go to state 25
    TypeName         go to state 26
    ArrayType        go to state 27
    Expression       go to state 28
    UnaryExpr        go to state 29
    IncDecStmt       go to state 30
    unary_op         go to state 31
    PrimaryExpr      go to state 32
    Operand          go to state 33
    Boolean          go to state 34
    Literal          go to state 35
    IndexExpr        go to state 36
    ConversionExpr   go to state 37
    Statement        go to state 38
    SimpleStmt       go to state 39
    AssignmentStmt   go to state 40
    Block            go to state 41
    StatementList    go to state 42
    IfStmt           go to state 43
    ForStmt          go to state 44
    PrintStmt        go to state 45


State 1

   86 PrintStmt: PRINT . '(' Expression ')'

    '('  shift, and go to state 46


State 2

   87 PrintStmt: PRINTLN . '(' Expression ')'

    '('  shift, and go to state 47


State 3

   73 IfStmt: IF . Condition Block
   74       | IF . Condition Block Else_stmt
   75       | IF . Condition Block ElseIfList
   76       | IF . Condition Block ElseIfList Else_stmt

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 48
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37
    Condition       go to state 49


State 4

   81 ForStmt: FOR . Condition Block
   82        | FOR . ForClause Block

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 50
    UnaryExpr       go to state 29
    IncDecStmt      go to state 30
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37
    SimpleStmt      go to state 51
    AssignmentStmt  go to state 40
    Condition       go to state 52
    ForClause       go to state 53
    InitStmt        go to state 54


State 5

   44 Operand: '(' . Expression ')'

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 55
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37


State 6

   70 Block: '{' . $@1 StatementList '}'

    $default  reduce using rule 69 ($@1)

    $@1  go to state 56


State 7

   12 ArrayType: '[' . Expression ']' Type

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 57
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37


State 8

   45 Boolean: TRUE .

    $default  reduce using rule 45 (Boolean)


State 9

   46 Boolean: FALSE .

    $default  reduce using rule 46 (Boolean)


State 10

    8 TypeName: INT .

    $default  reduce using rule 8 (TypeName)


State 11

    9 TypeName: FLOAT .

    $default  reduce using rule 9 (TypeName)


State 12

   11 TypeName: STRING .

    $default  reduce using rule 11 (TypeName)


State 13

   10 TypeName: BOOL .

    $default  reduce using rule 10 (TypeName)


State 14

    2 DeclarationStmt: VAR . IDENTIFIER TypeName
    3                | VAR . IDENTIFIER TypeName '=' Expression
    4                | VAR . IDENTIFIER ArrayType
    5                | VAR . IDENTIFIER ArrayType '=' Expression

    IDENTIFIER  shift, and go to state 58


State 15

   58 Statement: NEWLINE .

    $default  reduce using rule 58 (Statement)


State 16

   35 unary_op: '+' .

    $default  reduce using rule 35 (unary_op)


State 17

   36 unary_op: '-' .

    $default  reduce using rule 36 (unary_op)


State 18

   42 Operand: IDENTIFIER .

    $default  reduce using rule 42 (Operand)


State 19

   49 Literal: STRING_LIT .

    $default  reduce using rule 49 (Literal)


State 20

   47 Literal: INT_LIT .

    $default  reduce using rule 47 (Literal)


State 21

   48 Literal: FLOAT_LIT .

    $default  reduce using rule 48 (Literal)


State 22

   37 unary_op: '!' .

    $default  reduce using rule 37 (unary_op)


State 23

    0 $accept: Program . $end

    $end  shift, and go to state 59


State 24

   52 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 60


State 25

   51 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 61


State 26

    6 Type: TypeName .

    $default  reduce using rule 6 (Type)


State 27

    7 Type: ArrayType .

    $default  reduce using rule 7 (Type)


State 28

   14 Expression: Expression . binary_op Expression
   17 IncDecStmt: Expression . INC
   18           | Expression . DEC
   60 SimpleStmt: Expression .
   62 AssignmentStmt: Expression . assign_op Expression

    '='         shift, and go to state 62
    ADD_ASSIGN  shift, and go to state 63
    SUB_ASSIGN  shift, and go to state 64
    MUL_ASSIGN  shift, and go to state 65
    QUO_ASSIGN  shift, and go to state 66
    REM_ASSIGN  shift, and go to state 67
    LOR         shift, and go to state 68
    LAND        shift, and go to state 69
    GEQ         shift, and go to state 70
    LEQ         shift, and go to state 71
    EQL         shift, and go to state 72
    NEQ         shift, and go to state 73
    '>'         shift, and go to state 74
    '<'         shift, and go to state 75
    '+'         shift, and go to state 76
    '-'         shift, and go to state 77
    '*'         shift, and go to state 78
    '/'         shift, and go to state 79
    '%'         shift, and go to state 80
    INC         shift, and go to state 81
    DEC         shift, and go to state 82

    $default  reduce using rule 60 (SimpleStmt)

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86
    assign_op  go to state 87


State 29

   13 Expression: UnaryExpr .

    $default  reduce using rule 13 (Expression)


State 30

   61 SimpleStmt: IncDecStmt .

    $default  reduce using rule 61 (SimpleStmt)


State 31

   16 UnaryExpr: unary_op . UnaryExpr

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    UnaryExpr       go to state 88
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37


State 32

   15 UnaryExpr: PrimaryExpr .
   50 IndexExpr: PrimaryExpr . '[' Expression ']'

    '['  shift, and go to state 89

    $default  reduce using rule 15 (UnaryExpr)


State 33

   38 PrimaryExpr: Operand .

    $default  reduce using rule 38 (PrimaryExpr)


State 34

   43 Operand: Boolean .

    $default  reduce using rule 43 (Operand)


State 35

   41 Operand: Literal .

    $default  reduce using rule 41 (Operand)


State 36

   39 PrimaryExpr: IndexExpr .

    $default  reduce using rule 39 (PrimaryExpr)


State 37

   40 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 40 (PrimaryExpr)


State 38

   71 StatementList: Statement .

    $default  reduce using rule 71 (StatementList)


State 39

   53 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 90


State 40

   59 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 59 (SimpleStmt)


State 41

   54 Statement: Block . NEWLINE

    NEWLINE  shift, and go to state 91


State 42

    1 Program: StatementList .
   72 StatementList: StatementList . Statement

    PRINT       shift, and go to state 1
    PRINTLN     shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    '('         shift, and go to state 5
    '{'         shift, and go to state 6
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    VAR         shift, and go to state 14
    NEWLINE     shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    $default  reduce using rule 1 (Program)

    DeclarationStmt  go to state 24
    Type             go to state 25
    TypeName         go to state 26
    ArrayType        go to state 27
    Expression       go to state 28
    UnaryExpr        go to state 29
    IncDecStmt       go to state 30
    unary_op         go to state 31
    PrimaryExpr      go to state 32
    Operand          go to state 33
    Boolean          go to state 34
    Literal          go to state 35
    IndexExpr        go to state 36
    ConversionExpr   go to state 37
    Statement        go to state 92
    SimpleStmt       go to state 39
    AssignmentStmt   go to state 40
    Block            go to state 41
    IfStmt           go to state 43
    ForStmt          go to state 44
    PrintStmt        go to state 45


State 43

   55 Statement: IfStmt . NEWLINE

    NEWLINE  shift, and go to state 93


State 44

   56 Statement: ForStmt . NEWLINE

    NEWLINE  shift, and go to state 94


State 45

   57 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 95


State 46

   86 PrintStmt: PRINT '(' . Expression ')'

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 96
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37


State 47

   87 PrintStmt: PRINTLN '(' . Expression ')'

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 97
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37


State 48

   14 Expression: Expression . binary_op Expression
   80 Condition: Expression .

    LOR   shift, and go to state 68
    LAND  shift, and go to state 69
    GEQ   shift, and go to state 70
    LEQ   shift, and go to state 71
    EQL   shift, and go to state 72
    NEQ   shift, and go to state 73
    '>'   shift, and go to state 74
    '<'   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '%'   shift, and go to state 80

    $default  reduce using rule 80 (Condition)

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86


State 49

   73 IfStmt: IF Condition . Block
   74       | IF Condition . Block Else_stmt
   75       | IF Condition . Block ElseIfList
   76       | IF Condition . Block ElseIfList Else_stmt

    '{'  shift, and go to state 6

    Block  go to state 98


State 50

   14 Expression: Expression . binary_op Expression
   17 IncDecStmt: Expression . INC
   18           | Expression . DEC
   60 SimpleStmt: Expression .
   62 AssignmentStmt: Expression . assign_op Expression
   80 Condition: Expression .

    '='         shift, and go to state 62
    ADD_ASSIGN  shift, and go to state 63
    SUB_ASSIGN  shift, and go to state 64
    MUL_ASSIGN  shift, and go to state 65
    QUO_ASSIGN  shift, and go to state 66
    REM_ASSIGN  shift, and go to state 67
    LOR         shift, and go to state 68
    LAND        shift, and go to state 69
    GEQ         shift, and go to state 70
    LEQ         shift, and go to state 71
    EQL         shift, and go to state 72
    NEQ         shift, and go to state 73
    '>'         shift, and go to state 74
    '<'         shift, and go to state 75
    '+'         shift, and go to state 76
    '-'         shift, and go to state 77
    '*'         shift, and go to state 78
    '/'         shift, and go to state 79
    '%'         shift, and go to state 80
    INC         shift, and go to state 81
    DEC         shift, and go to state 82

    '{'       reduce using rule 80 (Condition)
    $default  reduce using rule 60 (SimpleStmt)

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86
    assign_op  go to state 87


State 51

   84 InitStmt: SimpleStmt .

    $default  reduce using rule 84 (InitStmt)


State 52

   81 ForStmt: FOR Condition . Block

    '{'  shift, and go to state 6

    Block  go to state 99


State 53

   82 ForStmt: FOR ForClause . Block

    '{'  shift, and go to state 6

    Block  go to state 100


State 54

   83 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 101


State 55

   14 Expression: Expression . binary_op Expression
   44 Operand: '(' Expression . ')'

    ')'   shift, and go to state 102
    LOR   shift, and go to state 68
    LAND  shift, and go to state 69
    GEQ   shift, and go to state 70
    LEQ   shift, and go to state 71
    EQL   shift, and go to state 72
    NEQ   shift, and go to state 73
    '>'   shift, and go to state 74
    '<'   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '%'   shift, and go to state 80

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86


State 56

   70 Block: '{' $@1 . StatementList '}'

    PRINT       shift, and go to state 1
    PRINTLN     shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    '('         shift, and go to state 5
    '{'         shift, and go to state 6
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    VAR         shift, and go to state 14
    NEWLINE     shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    DeclarationStmt  go to state 24
    Type             go to state 25
    TypeName         go to state 26
    ArrayType        go to state 27
    Expression       go to state 28
    UnaryExpr        go to state 29
    IncDecStmt       go to state 30
    unary_op         go to state 31
    PrimaryExpr      go to state 32
    Operand          go to state 33
    Boolean          go to state 34
    Literal          go to state 35
    IndexExpr        go to state 36
    ConversionExpr   go to state 37
    Statement        go to state 38
    SimpleStmt       go to state 39
    AssignmentStmt   go to state 40
    Block            go to state 41
    StatementList    go to state 103
    IfStmt           go to state 43
    ForStmt          go to state 44
    PrintStmt        go to state 45


State 57

   12 ArrayType: '[' Expression . ']' Type
   14 Expression: Expression . binary_op Expression

    ']'   shift, and go to state 104
    LOR   shift, and go to state 68
    LAND  shift, and go to state 69
    GEQ   shift, and go to state 70
    LEQ   shift, and go to state 71
    EQL   shift, and go to state 72
    NEQ   shift, and go to state 73
    '>'   shift, and go to state 74
    '<'   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '%'   shift, and go to state 80

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86


State 58

    2 DeclarationStmt: VAR IDENTIFIER . TypeName
    3                | VAR IDENTIFIER . TypeName '=' Expression
    4                | VAR IDENTIFIER . ArrayType
    5                | VAR IDENTIFIER . ArrayType '=' Expression

    '['     shift, and go to state 7
    INT     shift, and go to state 10
    FLOAT   shift, and go to state 11
    STRING  shift, and go to state 12
    BOOL    shift, and go to state 13

    TypeName   go to state 105
    ArrayType  go to state 106


State 59

    0 $accept: Program $end .

    $default  accept


State 60

   52 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 52 (Statement)


State 61

   51 ConversionExpr: Type '(' . Expression ')'

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 107
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37


State 62

   63 assign_op: '=' .

    $default  reduce using rule 63 (assign_op)


State 63

   64 assign_op: ADD_ASSIGN .

    $default  reduce using rule 64 (assign_op)


State 64

   65 assign_op: SUB_ASSIGN .

    $default  reduce using rule 65 (assign_op)


State 65

   66 assign_op: MUL_ASSIGN .

    $default  reduce using rule 66 (assign_op)


State 66

   67 assign_op: QUO_ASSIGN .

    $default  reduce using rule 67 (assign_op)


State 67

   68 assign_op: REM_ASSIGN .

    $default  reduce using rule 68 (assign_op)


State 68

   20 binary_op: LOR .

    $default  reduce using rule 20 (binary_op)


State 69

   19 binary_op: LAND .

    $default  reduce using rule 19 (binary_op)


State 70

   29 cmp_op: GEQ .

    $default  reduce using rule 29 (cmp_op)


State 71

   27 cmp_op: LEQ .

    $default  reduce using rule 27 (cmp_op)


State 72

   24 cmp_op: EQL .

    $default  reduce using rule 24 (cmp_op)


State 73

   25 cmp_op: NEQ .

    $default  reduce using rule 25 (cmp_op)


State 74

   28 cmp_op: '>' .

    $default  reduce using rule 28 (cmp_op)


State 75

   26 cmp_op: '<' .

    $default  reduce using rule 26 (cmp_op)


State 76

   30 add_op: '+' .

    $default  reduce using rule 30 (add_op)


State 77

   31 add_op: '-' .

    $default  reduce using rule 31 (add_op)


State 78

   32 mul_op: '*' .

    $default  reduce using rule 32 (mul_op)


State 79

   33 mul_op: '/' .

    $default  reduce using rule 33 (mul_op)


State 80

   34 mul_op: '%' .

    $default  reduce using rule 34 (mul_op)


State 81

   17 IncDecStmt: Expression INC .

    $default  reduce using rule 17 (IncDecStmt)


State 82

   18 IncDecStmt: Expression DEC .

    $default  reduce using rule 18 (IncDecStmt)


State 83

   14 Expression: Expression binary_op . Expression

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 108
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37


State 84

   21 binary_op: cmp_op .

    $default  reduce using rule 21 (binary_op)


State 85

   22 binary_op: add_op .

    $default  reduce using rule 22 (binary_op)


State 86

   23 binary_op: mul_op .

    $default  reduce using rule 23 (binary_op)


State 87

   62 AssignmentStmt: Expression assign_op . Expression

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 109
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37


State 88

   16 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 16 (UnaryExpr)


State 89

   50 IndexExpr: PrimaryExpr '[' . Expression ']'

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 110
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37


State 90

   53 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 53 (Statement)


State 91

   54 Statement: Block NEWLINE .

    $default  reduce using rule 54 (Statement)


State 92

   72 StatementList: StatementList Statement .

    $default  reduce using rule 72 (StatementList)


State 93

   55 Statement: IfStmt NEWLINE .

    $default  reduce using rule 55 (Statement)


State 94

   56 Statement: ForStmt NEWLINE .

    $default  reduce using rule 56 (Statement)


State 95

   57 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 57 (Statement)


State 96

   14 Expression: Expression . binary_op Expression
   86 PrintStmt: PRINT '(' Expression . ')'

    ')'   shift, and go to state 111
    LOR   shift, and go to state 68
    LAND  shift, and go to state 69
    GEQ   shift, and go to state 70
    LEQ   shift, and go to state 71
    EQL   shift, and go to state 72
    NEQ   shift, and go to state 73
    '>'   shift, and go to state 74
    '<'   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '%'   shift, and go to state 80

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86


State 97

   14 Expression: Expression . binary_op Expression
   87 PrintStmt: PRINTLN '(' Expression . ')'

    ')'   shift, and go to state 112
    LOR   shift, and go to state 68
    LAND  shift, and go to state 69
    GEQ   shift, and go to state 70
    LEQ   shift, and go to state 71
    EQL   shift, and go to state 72
    NEQ   shift, and go to state 73
    '>'   shift, and go to state 74
    '<'   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '%'   shift, and go to state 80

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86


State 98

   73 IfStmt: IF Condition Block .
   74       | IF Condition Block . Else_stmt
   75       | IF Condition Block . ElseIfList
   76       | IF Condition Block . ElseIfList Else_stmt

    ELSE  shift, and go to state 113

    $default  reduce using rule 73 (IfStmt)

    ElseIfList  go to state 114
    Else_stmt   go to state 115


State 99

   81 ForStmt: FOR Condition Block .

    $default  reduce using rule 81 (ForStmt)


State 100

   82 ForStmt: FOR ForClause Block .

    $default  reduce using rule 82 (ForStmt)


State 101

   83 ForClause: InitStmt ';' . Condition ';' PostStmt

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 48
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37
    Condition       go to state 116


State 102

   44 Operand: '(' Expression ')' .

    $default  reduce using rule 44 (Operand)


State 103

   70 Block: '{' $@1 StatementList . '}'
   72 StatementList: StatementList . Statement

    PRINT       shift, and go to state 1
    PRINTLN     shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    '('         shift, and go to state 5
    '{'         shift, and go to state 6
    '}'         shift, and go to state 117
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    VAR         shift, and go to state 14
    NEWLINE     shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    DeclarationStmt  go to state 24
    Type             go to state 25
    TypeName         go to state 26
    ArrayType        go to state 27
    Expression       go to state 28
    UnaryExpr        go to state 29
    IncDecStmt       go to state 30
    unary_op         go to state 31
    PrimaryExpr      go to state 32
    Operand          go to state 33
    Boolean          go to state 34
    Literal          go to state 35
    IndexExpr        go to state 36
    ConversionExpr   go to state 37
    Statement        go to state 92
    SimpleStmt       go to state 39
    AssignmentStmt   go to state 40
    Block            go to state 41
    IfStmt           go to state 43
    ForStmt          go to state 44
    PrintStmt        go to state 45


State 104

   12 ArrayType: '[' Expression ']' . Type

    '['     shift, and go to state 7
    INT     shift, and go to state 10
    FLOAT   shift, and go to state 11
    STRING  shift, and go to state 12
    BOOL    shift, and go to state 13

    Type       go to state 118
    TypeName   go to state 26
    ArrayType  go to state 27


State 105

    2 DeclarationStmt: VAR IDENTIFIER TypeName .
    3                | VAR IDENTIFIER TypeName . '=' Expression

    '='  shift, and go to state 119

    $default  reduce using rule 2 (DeclarationStmt)


State 106

    4 DeclarationStmt: VAR IDENTIFIER ArrayType .
    5                | VAR IDENTIFIER ArrayType . '=' Expression

    '='  shift, and go to state 120

    $default  reduce using rule 4 (DeclarationStmt)


State 107

   14 Expression: Expression . binary_op Expression
   51 ConversionExpr: Type '(' Expression . ')'

    ')'   shift, and go to state 121
    LOR   shift, and go to state 68
    LAND  shift, and go to state 69
    GEQ   shift, and go to state 70
    LEQ   shift, and go to state 71
    EQL   shift, and go to state 72
    NEQ   shift, and go to state 73
    '>'   shift, and go to state 74
    '<'   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '%'   shift, and go to state 80

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86


State 108

   14 Expression: Expression . binary_op Expression
   14           | Expression binary_op Expression .

    LOR   shift, and go to state 68
    LAND  shift, and go to state 69
    GEQ   shift, and go to state 70
    LEQ   shift, and go to state 71
    EQL   shift, and go to state 72
    NEQ   shift, and go to state 73
    '>'   shift, and go to state 74
    '<'   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '%'   shift, and go to state 80

    LOR       [reduce using rule 14 (Expression)]
    LAND      [reduce using rule 14 (Expression)]
    GEQ       [reduce using rule 14 (Expression)]
    LEQ       [reduce using rule 14 (Expression)]
    EQL       [reduce using rule 14 (Expression)]
    NEQ       [reduce using rule 14 (Expression)]
    '>'       [reduce using rule 14 (Expression)]
    '<'       [reduce using rule 14 (Expression)]
    '+'       [reduce using rule 14 (Expression)]
    '-'       [reduce using rule 14 (Expression)]
    '*'       [reduce using rule 14 (Expression)]
    '/'       [reduce using rule 14 (Expression)]
    '%'       [reduce using rule 14 (Expression)]
    $default  reduce using rule 14 (Expression)

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86


State 109

   14 Expression: Expression . binary_op Expression
   62 AssignmentStmt: Expression assign_op Expression .

    LOR   shift, and go to state 68
    LAND  shift, and go to state 69
    GEQ   shift, and go to state 70
    LEQ   shift, and go to state 71
    EQL   shift, and go to state 72
    NEQ   shift, and go to state 73
    '>'   shift, and go to state 74
    '<'   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '%'   shift, and go to state 80

    $default  reduce using rule 62 (AssignmentStmt)

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86


State 110

   14 Expression: Expression . binary_op Expression
   50 IndexExpr: PrimaryExpr '[' Expression . ']'

    ']'   shift, and go to state 122
    LOR   shift, and go to state 68
    LAND  shift, and go to state 69
    GEQ   shift, and go to state 70
    LEQ   shift, and go to state 71
    EQL   shift, and go to state 72
    NEQ   shift, and go to state 73
    '>'   shift, and go to state 74
    '<'   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '%'   shift, and go to state 80

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86


State 111

   86 PrintStmt: PRINT '(' Expression ')' .

    $default  reduce using rule 86 (PrintStmt)


State 112

   87 PrintStmt: PRINTLN '(' Expression ')' .

    $default  reduce using rule 87 (PrintStmt)


State 113

   77 ElseIfList: ELSE . IF Condition Block
   78           | ELSE . IF Condition Block ElseIfList
   79 Else_stmt: ELSE . Block

    IF   shift, and go to state 123
    '{'  shift, and go to state 6

    Block  go to state 124


State 114

   75 IfStmt: IF Condition Block ElseIfList .
   76       | IF Condition Block ElseIfList . Else_stmt

    ELSE  shift, and go to state 125

    $default  reduce using rule 75 (IfStmt)

    Else_stmt  go to state 126


State 115

   74 IfStmt: IF Condition Block Else_stmt .

    $default  reduce using rule 74 (IfStmt)


State 116

   83 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 127


State 117

   70 Block: '{' $@1 StatementList '}' .

    $default  reduce using rule 70 (Block)


State 118

   12 ArrayType: '[' Expression ']' Type .

    $default  reduce using rule 12 (ArrayType)


State 119

    3 DeclarationStmt: VAR IDENTIFIER TypeName '=' . Expression

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 128
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37


State 120

    5 DeclarationStmt: VAR IDENTIFIER ArrayType '=' . Expression

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 129
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37


State 121

   51 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 51 (ConversionExpr)


State 122

   50 IndexExpr: PrimaryExpr '[' Expression ']' .

    $default  reduce using rule 50 (IndexExpr)


State 123

   77 ElseIfList: ELSE IF . Condition Block
   78           | ELSE IF . Condition Block ElseIfList

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 48
    UnaryExpr       go to state 29
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37
    Condition       go to state 130


State 124

   79 Else_stmt: ELSE Block .

    $default  reduce using rule 79 (Else_stmt)


State 125

   79 Else_stmt: ELSE . Block

    '{'  shift, and go to state 6

    Block  go to state 124


State 126

   76 IfStmt: IF Condition Block ElseIfList Else_stmt .

    $default  reduce using rule 76 (IfStmt)


State 127

   83 ForClause: InitStmt ';' Condition ';' . PostStmt

    '('         shift, and go to state 5
    '['         shift, and go to state 7
    TRUE        shift, and go to state 8
    FALSE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    STRING      shift, and go to state 12
    BOOL        shift, and go to state 13
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    INT_LIT     shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    '!'         shift, and go to state 22

    Type            go to state 25
    TypeName        go to state 26
    ArrayType       go to state 27
    Expression      go to state 28
    UnaryExpr       go to state 29
    IncDecStmt      go to state 30
    unary_op        go to state 31
    PrimaryExpr     go to state 32
    Operand         go to state 33
    Boolean         go to state 34
    Literal         go to state 35
    IndexExpr       go to state 36
    ConversionExpr  go to state 37
    SimpleStmt      go to state 131
    AssignmentStmt  go to state 40
    PostStmt        go to state 132


State 128

    3 DeclarationStmt: VAR IDENTIFIER TypeName '=' Expression .
   14 Expression: Expression . binary_op Expression

    LOR   shift, and go to state 68
    LAND  shift, and go to state 69
    GEQ   shift, and go to state 70
    LEQ   shift, and go to state 71
    EQL   shift, and go to state 72
    NEQ   shift, and go to state 73
    '>'   shift, and go to state 74
    '<'   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '%'   shift, and go to state 80

    $default  reduce using rule 3 (DeclarationStmt)

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86


State 129

    5 DeclarationStmt: VAR IDENTIFIER ArrayType '=' Expression .
   14 Expression: Expression . binary_op Expression

    LOR   shift, and go to state 68
    LAND  shift, and go to state 69
    GEQ   shift, and go to state 70
    LEQ   shift, and go to state 71
    EQL   shift, and go to state 72
    NEQ   shift, and go to state 73
    '>'   shift, and go to state 74
    '<'   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '%'   shift, and go to state 80

    $default  reduce using rule 5 (DeclarationStmt)

    binary_op  go to state 83
    cmp_op     go to state 84
    add_op     go to state 85
    mul_op     go to state 86


State 130

   77 ElseIfList: ELSE IF Condition . Block
   78           | ELSE IF Condition . Block ElseIfList

    '{'  shift, and go to state 6

    Block  go to state 133


State 131

   85 PostStmt: SimpleStmt .

    $default  reduce using rule 85 (PostStmt)


State 132

   83 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 83 (ForClause)


State 133

   77 ElseIfList: ELSE IF Condition Block .
   78           | ELSE IF Condition Block . ElseIfList

    ELSE  shift, and go to state 134

    ELSE      [reduce using rule 77 (ElseIfList)]
    $default  reduce using rule 77 (ElseIfList)

    ElseIfList  go to state 135


State 134

   77 ElseIfList: ELSE . IF Condition Block
   78           | ELSE . IF Condition Block ElseIfList

    IF  shift, and go to state 123


State 135

   78 ElseIfList: ELSE IF Condition Block ElseIfList .

    $default  reduce using rule 78 (ElseIfList)
